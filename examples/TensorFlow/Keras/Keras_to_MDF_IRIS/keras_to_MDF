digraph Sequential_graph {
	node [color="#444444" fillcolor="#ffffff" fontcolor=black penwidth=1 shape=box style="rounded,filled"]
	Input_0 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Input_0</b></td></tr><tr><td><font color="#1666ff">Input_0_in</font> = [[ 0.14443512 ... -0.07943674] ... [-1.42027864 ... -1.33370109]] (NP (30, 4) float64)</td></tr><tr><td><font color="#cc3355">Input_0_out</font> = <font color="#1666ff">Input_0_in</font> </td></tr></table>>]
	node [color="#444444" fillcolor="#ffffff" fontcolor=black penwidth=1 shape=box style="rounded,filled"]
	First_layer_1 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>First_layer_1</b></td></tr><tr><td><font color="#188855">First_layer_1_in</font> </td></tr><tr><td><font color="#1666ff">wgts</font> = [[-0.3618062  ...  0.397131  ] ... [ 0.05185791 ...  0.22908908]] (NP (4, 32) float32)</td></tr><tr><td><font color="#1666ff">bias</font> = [ 0.00608886 ... -0.00280216] (NP (32,) float32)</td></tr><tr><td><font color="#1666ff">Output</font> = (<font color="#188855">First_layer_1_in</font> @ <font color="#1666ff">wgts</font>) + <font color="#1666ff">bias</font></td></tr><tr><td><font color="#cc3355">First_layer_1_out</font> = <font color="#1666ff">Output</font> </td></tr></table>>]
	node [color="#444444" fillcolor="#ffffff" fontcolor=black penwidth=1 shape=box style="rounded,filled"]
	Relu_2 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Relu_2</b></td></tr><tr><td><font color="#188855">Relu_2_in</font> </td></tr><tr><td><font color="#1666ff">Output</font> = (<font color="#188855">Relu_2_in</font> * (<font color="#188855">Relu_2_in</font> &gt; 0 ))</td></tr><tr><td><font color="#cc3355">Relu_2_out</font> = <font color="#1666ff">Output</font> </td></tr></table>>]
	node [color="#444444" fillcolor="#ffffff" fontcolor=black penwidth=1 shape=box style="rounded,filled"]
	Second_layer_3 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Second_layer_3</b></td></tr><tr><td><font color="#188855">Second_layer_3_in</font> </td></tr><tr><td><font color="#1666ff">wgts</font> = [[-0.01069917 ...  0.00278666] ... [-0.14248785 ...  0.12133926]] (NP (32, 64) float32)</td></tr><tr><td><font color="#1666ff">bias</font> = [-0.00728454 ...  0.01116762] (NP (64,) float32)</td></tr><tr><td><font color="#1666ff">Output</font> = (<font color="#188855">Second_layer_3_in</font> @ <font color="#1666ff">wgts</font>) + <font color="#1666ff">bias</font></td></tr><tr><td><font color="#cc3355">Second_layer_3_out</font> = <font color="#1666ff">Output</font> </td></tr></table>>]
	node [color="#444444" fillcolor="#ffffff" fontcolor=black penwidth=1 shape=box style="rounded,filled"]
	Relu_4 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Relu_4</b></td></tr><tr><td><font color="#188855">Relu_4_in</font> </td></tr><tr><td><font color="#1666ff">Output</font> = (<font color="#188855">Relu_4_in</font> * (<font color="#188855">Relu_4_in</font> &gt; 0 ))</td></tr><tr><td><font color="#cc3355">Relu_4_out</font> = <font color="#1666ff">Output</font> </td></tr></table>>]
	node [color="#444444" fillcolor="#ffffff" fontcolor=black penwidth=1 shape=box style="rounded,filled"]
	Third_layer_5 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Third_layer_5</b></td></tr><tr><td><font color="#188855">Third_layer_5_in</font> </td></tr><tr><td><font color="#1666ff">wgts</font> = [[ 0.21627618 ...  0.15577862] ... [-0.08379256 ... -0.05158306]] (NP (64, 64) float32)</td></tr><tr><td><font color="#1666ff">bias</font> = [ 0.00090039 ... -0.00847603] (NP (64,) float32)</td></tr><tr><td><font color="#1666ff">Output</font> = (<font color="#188855">Third_layer_5_in</font> @ <font color="#1666ff">wgts</font>) + <font color="#1666ff">bias</font></td></tr><tr><td><font color="#cc3355">Third_layer_5_out</font> = <font color="#1666ff">Output</font> </td></tr></table>>]
	node [color="#444444" fillcolor="#ffffff" fontcolor=black penwidth=1 shape=box style="rounded,filled"]
	Relu_6 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Relu_6</b></td></tr><tr><td><font color="#188855">Relu_6_in</font> </td></tr><tr><td><font color="#1666ff">Output</font> = (<font color="#188855">Relu_6_in</font> * (<font color="#188855">Relu_6_in</font> &gt; 0 ))</td></tr><tr><td><font color="#cc3355">Relu_6_out</font> = <font color="#1666ff">Output</font> </td></tr></table>>]
	node [color="#444444" fillcolor="#ffffff" fontcolor=black penwidth=1 shape=box style="rounded,filled"]
	Fourth_layer_7 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Fourth_layer_7</b></td></tr><tr><td><font color="#188855">Fourth_layer_7_in</font> </td></tr><tr><td><font color="#1666ff">wgts</font> = [[ 0.07395836 ...  0.12052273] ... [-0.08207593 ...  0.02751157]] (NP (64, 3) float32)</td></tr><tr><td><font color="#1666ff">bias</font> = [ 0.00441413  0.00690141 -0.00832103] (NP (3,) float32)</td></tr><tr><td><font color="#1666ff">Output</font> = (<font color="#188855">Fourth_layer_7_in</font> @ <font color="#1666ff">wgts</font>) + <font color="#1666ff">bias</font></td></tr><tr><td><font color="#cc3355">Fourth_layer_7_out</font> = <font color="#1666ff">Output</font> </td></tr></table>>]
	node [color="#444444" fillcolor="#ffffff" fontcolor=black penwidth=1 shape=box style="rounded,filled"]
	Softmax_8 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Softmax_8</b></td></tr><tr><td><font color="#188855">Softmax_8_in</font> </td></tr><tr><td><font color="#441199">exp</font> = <i>exponential</i>(<font color="#188855">Softmax_8_in</font>, 1, 1, 0, 0)</td></tr><tr><td colspan="2"><i>exponential(variable0, scale, rate, bias, offset) = scale * exp((rate * variable0) + bias) + offset</i></td></tr><tr><td><font color="#441199">exp_sum</font> = <i>sum(exp)</i> ( - no args -)</td></tr><tr><td><font color="#441199">Output</font> = <i>exp / exp_sum</i> ( - no args -)</td></tr><tr><td><font color="#cc3355">Softmax_8_out</font> = <font color="#441199">Output</font> </td></tr></table>>]
	Input_0 -> First_layer_1 [label=<edge_Input_0_First_layer_1 (<font color="#cc3355">Input_0_out</font> -&gt; <font color="#188855">First_layer_1_in</font>)> arrowhead=empty]
	First_layer_1 -> Relu_2 [label=<edge_First_layer_1_Relu_2 (<font color="#cc3355">First_layer_1_out</font> -&gt; <font color="#188855">Relu_2_in</font>)> arrowhead=empty]
	Relu_2 -> Second_layer_3 [label=<edge_Relu_2_Second_layer_3 (<font color="#cc3355">Relu_2_out</font> -&gt; <font color="#188855">Second_layer_3_in</font>)> arrowhead=empty]
	Second_layer_3 -> Relu_4 [label=<edge_Second_layer_3_Relu_4 (<font color="#cc3355">Second_layer_3_out</font> -&gt; <font color="#188855">Relu_4_in</font>)> arrowhead=empty]
	Relu_4 -> Third_layer_5 [label=<edge_Relu_4_Third_layer_5 (<font color="#cc3355">Relu_4_out</font> -&gt; <font color="#188855">Third_layer_5_in</font>)> arrowhead=empty]
	Third_layer_5 -> Relu_6 [label=<edge_Third_layer_5_Relu_6 (<font color="#cc3355">Third_layer_5_out</font> -&gt; <font color="#188855">Relu_6_in</font>)> arrowhead=empty]
	Relu_6 -> Fourth_layer_7 [label=<edge_Relu_6_Fourth_layer_7 (<font color="#cc3355">Relu_6_out</font> -&gt; <font color="#188855">Fourth_layer_7_in</font>)> arrowhead=empty]
	Fourth_layer_7 -> Softmax_8 [label=<edge_Fourth_layer_7_Softmax_8 (<font color="#cc3355">Fourth_layer_7_out</font> -&gt; <font color="#188855">Softmax_8_in</font>)> arrowhead=empty]
}
